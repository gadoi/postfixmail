https://linoxide.com/mail/install-configure-postfix-ubuntu/

Step 1) Install and configure Postfixadmin
Postfixadmin is a web module that allows you to easily manipulate virtual domains and users in a database.

a) Download postfixadmin
First, we will install the required packages

# apt install php-imap php-mbstring php7.2-imap php7.2-mbstring

Normally postfixadmin is present on the default repositories of Ubuntu 18.04 but it will try to install Apache and PostgreSQL instead of Nginx and MySql. So, to keep our configuration, we will download the actual latest version 3.2 from source on the Github site project and save it in /opt folder

# wget -P /opt https://github.com/postfixadmin/postfixadmin/archive/postfixadmin-3.2.4.tar.gz

# cd /opt && tar xvf postfixadmin-3.2.4.tar.gz
Now we should rename it

# mv postfixadmin-postfixadmin-3.2/ postfixadmin
Postfixadmin uses a script called setup.php that we will use through the web server during the installation.  On the previous version of postfix (3.1 and oldest), this script is directly in the Postfixadmin root folder but in the actual version (3.2), it's contained in the sub-directory public of the postfixadmin folder. Normally we should move postfixadmin to the root folder of our Nginx web server but with this new version, we will only create a symbolic link of the public folder which contains the script then, rename it for some security

# ln -s /opt/postfixadmin/public/ /var/www/html/pfa
root@li1002-235:~# ls -l /var/www/html/
total 4
-rw-r--r-- 1 root root 612 Jun 10 04:51 index.nginx-debian.html
lrwxrwxrwx 1 root root  25 Jun 12 04:01 pfa -> /opt/postfixadmin/public/
b) Create the postfix database
Now we should connect to mysql database for some configurations

# mysql -u root -p
Enter password:
Then create the database and the user

mysql> CREATE DATABASE postfix;
Query OK, 1 row affected (0.00 sec)

mysql> CREATE USER 'postfix'@'localhost' IDENTIFIED BY '123456a@Cyber';
Query OK, 0 rows affected (0.00 sec)

mysql> GRANT ALL PRIVILEGES ON `postfix` . * TO 'postfix'@'localhost';
Query OK, 0 rows affected (0.00 sec)

mysql> FLUSH PRIVILEGES;
Query OK, 0 rows affected (0.00 sec)

mysql> exit
Bye
c) Configure postfixadmin
Now that we have configured the database, we should indicate it to postfixadmin so that it could know where to get the information. To do this, create the /opt/postfixadmin/config.local.php file and add the content below

# vim /opt/postfixadmin/config.local.php

<?php
$CONF['database_type'] = 'mysqli';
$CONF['database_user'] = 'postfix';
$CONF['database_password'] = '123456a@Cyber';
$CONF['database_name'] = 'postfix';

$CONF['configured'] = true;
?>

Step 2) Install and configure postfix
a) Install postfix
Now we can install the postfix packages.

# apt install postfix postfix-mysql sasl2-bin
...

You will have to answer two question about the type of mail and the name of your mail server. Make sure to replace the hostname and domain values with yours

the type of mail configuration: Internet Site
the system mail name: hostname.domain.com
Make sure that sasl run at the startup by editing its configuration file

# vim /etc/default/saslauthd

# Should saslauthd run automatically on startup? (default: no)
START=yes
Now restart the service

# systemctl restart saslauthd
As we are configuring a mail server with virtual users, we need an owner of all mailboxes so will create a system user which will be used by all virtual users to access email on the server. First, create the group owner and the folder which will store the mailboxes.

# groupadd -g 5000 vmail && mkdir -p /var/vmail
Now create the owner

# useradd -u 5000 vmail -g vmail -s /usr/sbin/nologin -d /var/vmail
Make sure to give the permission of the mail directory to the owner so that it can store the mails into the appropriate directories.

# chown -R vmail:vmail /var/vmail


If you don't do this, dovecot will not be able to create the required folders to store the emails.

b) Create the configuration files for the database
Now create a folder which will contain some database files

# mkdir -p /etc/postfix/sql
Postfix need 03 database files which will allow it to access the database that we created earlier:

Domains to contain the list of domain names hosted on the server. it will allow postfix to determine if our server is in charge of a domain (mytuto.com) when it receives an email (user@mytuto.com) on it. If it's the case, it will mean that the domain is in our database.
# vim /etc/postfix/sql/mysql_virtual_domains_maps.cf
user = postfix
password = 123456a@Cyber
hosts = 127.0.0.1
dbname = postfix
query = SELECT domain FROM domain WHERE domain='%s' AND active = '1'
We will enable the configuration and add it automatically to the /etc/postfix/main.cf file and reload the postfix configuration to avoid having to do it manually. So the file will be updated everytime you use this command with new values.

# postconf -e virtual_mailbox_domains=mysql:/etc/postfix/sql/mysql_virtual_domains_maps.cf
Now we can check the configuration. We will run a command that will execute the query contained in the file in order to search for a domain in our database. An element (the searched domain) must be returned or nothing if the domain is not present.

# postmap -q cybergate.info mysql:/etc/postfix/sql/mysql_virtual_domains_maps.cf
cybergate.info
